/*
P1_ WRITE A LOCATOR THAT RETURNS THE TABLE 1 ITSELF
//table[@id='table1']

P2_ WRITE A LOCATOR THAT RETURNS ALL OF THE ROWS INSIDE OF TABLE 1
//table[@id='table1']//tr

P3_ WRITE A LOCATOR THAT RETURNS ALL OF THE ROWS INSIDE OF BODY - TABLE 1
//table[@id='table1']//tbody//tr

P4_ WRITE A LOCATOR THAT RETURNS ONLY 3RD ROW IN THE BODY
//table[@id='table1']//tbody//tr[3]

P5_ WRITE A LOCATOR THAT RETURNS ALL OF THE CELLS IN ALL OF THE ROW (IN BODY)
//table[@id='table1']//tbody//tr//td


P6_ WRITE A LOCATOR THAT RETURNS ALL OF THE FIRST NAMES FROM TABLE
//table[@id='table1']//tbody//tr//td[2]


P7_ WRITE A LOCATOR THAT RETURNS FRANKS CELL SPECIFICALLY
//table[@id='table1']//tbody//tr[3]//td[2]

 We are saying:

    //tr[2] : get me the second row in the <tbody>
    //td[2] : get me the second cell in the 2nd row.

P8_ WRITE A LOCATOR THAT RETURNS FRANKS CELL SPECIFICALLY
    USE FRANKS TEXT
//table[@id='table1']//td[.='Frank']

- If you can create locators with text, it will be more dependent against the dynamism of the table

P9_ WRITE A LOCATOR THAT RETURNS $100 CELL SPECIFICALLY
    USE FRANKS TEXT
    //table[@id='table1']//tr[3]//td[4]
    //table[@id='table1']//td[.='$100.00']


P10_ WRITE A LOCATOR THAT RETURNS JASONS DUE AMOUNT BASED ON JASONS NAME
//table[@id='table1']//td[.='Jason']/following-sibling::td[2]
//table[@id='table1']//td[.='Jason']/../td[4]


P11_ WRITE A LOCATOR THAT RETURNS Tim's last name  BASED ON tim's NAME
//table[@id='table1']//td[.='Tim']/preceding-sibling::td[1]
//table[@id='table1']//tbody//td[.='Tim']/../td[1]

P12_ WRITE A LOCATOR THAT RETURNS ALL EMAILS THAT HAS $50 DUE DATE
//table[@id='table1']//tbody//td[.='$50.00']/preceding-sibling::td[1]



 */
